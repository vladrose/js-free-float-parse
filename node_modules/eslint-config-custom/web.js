module.exports = {
	extends: ["./next"],
	rules: {
		// Turbo
		"turbo/no-undeclared-env-vars": "off",
		// Typescript
		"@typescript-eslint/ban-types": "off",
		// Import
		// "import/named": "error",
		"import/first": "error",
		"import/exports-last": "off",
		"import/no-named-as-default": "error",
		/*"import/no-restricted-imports": [
			"error",
			{
				"paths": [
					{
						"name": "next-auth/react",
						"importNames": ["useSession"],
						"message": "Please import useSession from '~/hooks/useSession' instead."
					}
				],
				"patterns": [
					{
						"group": ["next-auth/react"],
						"message": "Please import useSession from '~/hooks/useSession' instead."
					}
				]
			}
		],*/
		/*"import/no-restricted-paths": [
			"error",
			{
				basePath: "./src",
				"zones": [
					{
						"target": "./", // Client code
						"from": "./app/api", // App code
						"message": "Don't import server code into client-side files!"
					},
					{
						"target": "./app/api", // App code
						"from": "~/", // Client code
						"message": "Don't import client code into server-side files!"
					}
				]
			}
		],*/
		"import/order": [
			"error",
			{
				"newlines-between": "always",
				groups: ["builtin", "external", "internal", "index", "parent", "sibling", "type", "object"],
				pathGroups: [
					{
						pattern: "~/domain/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/application/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/infrastructure/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/providers/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/hooks/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/modals/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/widgets/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/entities/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/features/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/shared/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/icons/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/motions",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/components/style/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/utils/**",
						group: "internal",
						position: "after",
					},
					{
						pattern: "~/tests/**",
						group: "internal",
						position: "after",
					},
				],
			},
		],
	},
	settings: {
		// Configure import extensions
		"import/parsers": {
			"@typescript-eslint/parser": [".ts", ".tsx"],
		},
		// Configure import core modules without any path or libs
		"import/core-modules": [],
		// Configure node and typescripts resolvers
		"import/resolver": {
			node: true,
			typescript: true,
		},
	},
}
